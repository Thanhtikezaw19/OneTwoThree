ruby:
  limit = TwoNumber.first.limit
.number-div
      - TwoNumber.all.in_batches(of: 10) do |batch|
        .table.mb-2
          table
            - batch.each do |row|
              tbody
                tr
                  - if limit && row.amount > limit
                    td.num-row(style=(row.amount > limit ? "background-color: yellow;" : "")) = row.numbers
                    td.amt(style=(row.amount > limit ? "background-color: yellow;" : "")) = row.amount
                  - else
                    td.num-row = row.numbers
                    td.amt = row.amount
            td.amt-total Total
            - total = 0
            - batch.each do |ttl|
              - total += ttl.amount
            td.amt-total = total

javascript:
  // reload_table.js
  document.addEventListener('DOMContentLoaded', () => {
    setInterval(() => {
      const xhr = new XMLHttpRequest();
      xhr.open('GET', 'update_table', true);
      xhr.onload = function () {
        if (xhr.status === 200) {
          // Replace the table content with the updated data
          const table = document.getElementById('data-table');
          table.innerHTML = xhr.responseText;
        }
      };
      xhr.send();
    }, 3000); // 5000 milliseconds = 5 seconds
  });
